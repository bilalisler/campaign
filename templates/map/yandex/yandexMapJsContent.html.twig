{% set centerCordinate = '0,0' %}
{% set latitude = 0.0  %}
{% set longitude = 0.0 %}

{% for placeMark in placeMarks %}
    {% set cordinates = placeMark.cordinates | split(',') %}
    {% set latitude = cordinates[0] + latitude %}
    {% set longitude = cordinates[1] + longitude %}
{% endfor %}

/**
* this is the average of all latitudes and longitudes of latitude and longitude. so these are central coordinates
*/
{% set latitude = latitude/(placeMarks | length)  %}
{% set longitude = longitude/(placeMarks | length) %}

{% set centerLocation = latitude ~','~ longitude %}
{% if center is defined and center.latitude is not null and center.longitude is not null %}
    {% set centerLocation = center.latitude ~','~ center.longitude %}
{% endif %}

ymaps.ready(init);

function init() {
var myMap = new ymaps.Map("map", {
    center: [{{ centerLocation }}],
    zoom: {{ zoom |default(10) }},
    controls: []
});

{% for placeMark in placeMarks %}
myMap.geoObjects.add(
    new ymaps.Placemark(
        [{{ placeMark.cordinates }}],
        {
            iconContent: '{{ placeMark.title }}',
            hintContent: '{{ placeMark.title }}',
            balloonContent: '{{ placeMark.content |raw }}'
        },
        {
            openEmptyBalloon: true,
            iconLayout: 'default#image',
            iconImageHref: "{{ asset('assets/images/shop.png') }}",
            iconImageSize: [40, 40],
            iconImageOffset: [-5, -38]
        }
    )
);
{% endfor %}

var mapBounds = {
    top: {
        lat: 0,
        lon: 0
    },
    bottom: {
        lat: 0,
        lon: 0
    }
};

myMap.events.add('actionend', function (e) {
//bu method ile birlikte kullanıcının cursor ile haritada yaptığı hareketleri kordinat olarak alabiliyoruz.
// fakat sadece cursorun konumuna göre yani tek emlem ve boylam

    var map_center_cursot = e.originalEvent.map.getCenter(); // cursor'un işaret ettiği yerin kordinatları
    
    console.log(this.mapBounds);
});


myMap.events.add('actiontickcomplete', function (e) {
// bu method ise enlem ve boylamın alt ve üst sınırlarını da alır.
//bu method ile birlikte kullanıcının cursor ile haritada yaptığı hareketleri kordinat olarak alabiliyoruz.
    var map_bounds = e.originalEvent.map.getBounds();

    this.mapBounds = {
        top: {
            lat: map_bounds[0][0],
            lon: map_bounds[0][1]
        },
        bottom: {
            lat: map_bounds[1][0],
            lon: map_bounds[1][1]
        }
        };
});






}