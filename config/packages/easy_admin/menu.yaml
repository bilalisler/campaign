# This file sets the configuration of the main menu. If your backend is simple,
# you probably can leave the 'menu' option empty and rely on the default menu
# created by EasyAdmin.
#
# NOTE: this demo application splits the backend configuration into several
# small files for educational purposes. In your application you can put the
# entire backend configuration in just one file.
#
# The configuration options are explained in detail in the bundle documentation,
# which is published at https://github.com/javiereguiluz/EasyAdminBundle
easy_admin:
  design:
    menu:
    #- { property: 'User', roles: ['ROLE_SUPER_ADMIN'], route: 'easyadmin', params: {entity: 'User',action: 'list',menuIndex: 0,submenuIndex: -1}, label: 'Users', icon: 'users' }
    - Products
    - { property: 'Categories', roles: ['ROLE_SUPER_ADMIN'], route: 'easyadmin', params: {entity: 'Categories',action: 'list',menuIndex: 0,submenuIndex: -1}, label: 'Categories', icon: 'list-alt' }
    - CampaignCondition
    - Campaigns
    - Messages
    - Orders
    - { property: 'ProductsBrands', roles: ['ROLE_SUPER_ADMIN'], route: 'easyadmin', params: {entity: 'ProductsBrands',action: 'list',menuIndex: 0,submenuIndex: -1}, label: 'ProductsBrands', icon: 'list-alt' }
    - ProductsImages
    - { property: 'ShopProfile', roles: ['ROLE_SUPER_ADMIN','ROLE_SHOP'], route: 'easyadmin', params: {entity: 'ShopProfile',action: 'show',menuIndex: 0,submenuIndex: -1}, label: 'ShopProfile', icon: 'list-all' }
    - { property: 'UserFavoriteProducts', roles: ['ROLE_SUPER_ADMIN'], route: 'easyadmin', params: {entity: 'UserFavoriteProducts',action: 'list',menuIndex: 0,submenuIndex: -1}, label: 'UserFavoriteProducts', icon: 'users' }
